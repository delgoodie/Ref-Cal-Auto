import os
import re
import PySimpleGUI as sg
from docx import Document
from docx.shared import Inches
import matplotlib.pyplot as plt
import docx2pdf

# from easyio import File

# "\\\\10.122.0.134\\Reflectance Lab\\Reflectance Calibrations\\PermaFlect Targets\\18%PF-0921-4400\\Info.txt"


def ParseTablePosition(position) -> tuple[int, int]:
    if type(position) is str:
        if ":" in position:
            c, r = position.split(":", 1)
        else:
            match = re.match("^([a-zA-Z]+)(\\d+)$", position)
            if len(match.regs) > 1:
                c = position[match.regs[1][0] : match.regs[1][1]]
                r = position[match.regs[2][0] : match.regs[2][1]]
        if c and r:
            position = (ord(c.upper()) - 65, int(r) - 1)
        else:
            raise ValueError(f"easyio.ParseTablePosition: c:{c}, r:{r} is invalid position")
    elif type(position) is tuple:
        c, r = position
        if type(c) is int or type(c) is float or re.match("^\\d+$", c):
            c = int(c)
        elif re.match("^[A-Za-z]+$", c):
            c = c.upper()
            col = 0
            i = 1
            for char in c:
                col += (ord(char) - 65) * i
                i *= 26
            c = col
        r = int(r)
        position = (c, r - 1)
    else:
        raise TypeError(f"easyio.ParseTablePosition: position: {type(position)} is not <class 'str'> or <class 'tuple'>")

    if type(position) is tuple and type(position[0]) is int and type(position[1]) is int:
        return position
    else:
        raise ValueError(f"easyio.ParseTablePosition: c:{c}, r:{r} is invalid position")


class CSV:
    def __init__(self, _path: str):
        self.path = _path
        file = open(self.path, "r")
        self._data = []
        for l in file.read().split("\n"):
            self._data.append(l.split(","))
        file.close()
        self.modified = False

    def Read(self, position="*"):
        """
        Read from csv table cell[s]

        position -- cell position: '*', (0, 34) | ('A', 34) | ('A', '34') | 'A34' | 'A:34'
        if position == '*' then a 2D array of all cols & rows will be returned

        return -- data at position
        """
        if position == "*":
            return self._data
        else:
            position = ParseTablePosition(position)
            if position[1] < len(self._data) and position[0] < len(self._data[position[0]]):
                return self._data[position[1]][position[0]]
            else:
                raise IndexError(f"easyio.CSV.Read: position:{position} not in cols: {len(self._data[0])}, rows: {len(self._data)}")

    def Write(self, position, data: str = ""):
        self.modified = True
        """
        Write string to single csv table cell

        position -- cell position: (0, 34) | ('A', 34) | ('A', '34') | 'A34' | 'A:34'
        data -- string of new cell contents: '34.213'

        return -- the overwriten data: 'data before Write()'
        """
        position = ParseTablePosition(position)

        pre = self._data[position[1]][position[0]]
        self._data[position[1]][position[0]] = data
        return pre

    def __del__(self):
        if self.modified:
            string = ""
            for c in self._data:
                for r in c:
                    string += r + ","
                string += "\n"

            file = open(self.path, "w")
            file.write(string)
            file.close()


def WordOccurences(doc, variable: str) -> None:
    occurences = []
    for p in doc.paragraphs:
        if re.match(f"^.*<{variable}>.*$", p.text):
            occurences.append(p)
    for t in doc.tables:
        for c in t._cells:
            if re.match(f"^.*<{variable}>.*$", c.text):
                occurences.append(c)
    for s in doc.sections:
        for p in s.header.paragraphs:
            if re.match(f"^.*<{variable}>.*$", p.text):
                occurences.append(p)
        for t in s.header.tables:
            for c in t._cells:
                if re.match(f"^.*<{variable}>.*$", c.text):
                    occurences.append(c)
    return occurences


def ReplaceText(doc, variable: str, value: str):
    for e in WordOccurences(doc, variable):
        e.text = e.text.replace(f"<{variable}>", value)


def ReplacePicture(doc, variable: str, path: str, size):
    for e in WordOccurences(doc, variable):
        e.text = ""
        e.add_run().add_picture(path, width=Inches(size[0]), height=Inches(size[1]))


def dateFromString(string: str) -> tuple:
    regex = re.search("(\\d+)[\\/\\-_ ](\\d+)[\\/\\-_ ](\\d+)", string)
    if not regex or len(regex.regs) != 4:
        return 0
    else:
        return (
            int(string[regex.regs[1][0] : regex.regs[1][1]]),
            int(string[regex.regs[2][0] : regex.regs[2][1]]),
            int(string[regex.regs[3][0] : regex.regs[3][1]]),
        )


def getDarkScanPath(date: str, instrument: str):
    dark_scans_dir = "\\\\lssvr-fs01\\Reflectance Lab\\Reflectance Calibrations\\stray light Summary.xls_files\\"
    datedDarkScans = []
    for dir in os.listdir(dark_scans_dir):
        dirDate = dateFromString(dir)
        if dirDate and dirDate[0] == date[0] and dirDate[2] == date[2] and dirDate[2] == date[2]:
            datedDarkScans.append(dir)

    darkScan = ""
    if len(datedDarkScans) > 1:
        for dir in datedDarkScans:
            if re.match(f"^.*{date[2]}\\s*{instrument}.*$", dir, re.IGNORECASE):
                darkScan = dir
        if darkScan == "":
            return ""
    elif len(datedDarkScans) == 1:
        darkScan = datedDarkScans[0]
    else:
        return ""

    if darkScan:
        return dark_scans_dir + darkScan + "\\Equation1.Sample.Cycle1.Equation1.csv"
    else:
        return ""


def savePDF(input, output):
    docx2pdf.convert(input, output)


def Execute(path: str, model: str, serial_number: str, date: tuple, n_r: str, instrument: str):
    print("\n\nExecuting...")
    if not os.path.exists(path + "Equation1.Sample.Cycle1.Equation1.csv"):
        return "Invalid Folder: Equation1.Sample.Cycle1.Equation1.csv DOES NOT EXIST"
    darkScanPath = getDarkScanPath(date, instrument)
    if len(darkScanPath) == 0:
        return "No Stray Light Scan found for date"

    data = CSV(path + "Equation1.Sample.Cycle1.Equation1.csv")
    print(f"Located Raw Data at {path}Equation1.Sample.Cycle1.Equation1.csv")
    darkScan = CSV(darkScanPath)
    print(f"Located Stray Light Scan at {darkScanPath}")
    doc = Document("Ref-Cal-Cert-Template.docx")
    print("Located Template docx at \\Ref-Cal-Cert-Template.docx")

    # MS% in column B
    Ms = [float(data.Read(("B", i))) for i in range(2, 2257)]

    # Mh (Dark Scan) in column H
    Mh = [float(darkScan.Read(("B", i))) for i in range(2, 2257)]

    # Rr from column F
    Rr = [
        0.9730,
        0.9730,
        0.9740,
        0.9740,
        0.9740,
        0.9750,
        0.9750,
        0.9750,
        0.9750,
        0.9760,
        0.9760,
        0.9760,
        0.9760,
        0.9770,
        0.9770,
        0.9770,
        0.9770,
        0.9770,
        0.9780,
        0.9780,
        0.9780,
        0.9780,
        0.9780,
        0.9790,
        0.9790,
        0.9790,
        0.9790,
        0.9790,
        0.9800,
        0.9800,
        0.9800,
        0.9800,
        0.9800,
        0.9810,
        0.9810,
        0.9810,
        0.9810,
        0.9810,
        0.9820,
        0.9820,
        0.9820,
        0.9820,
        0.9820,
        0.9830,
        0.9830,
        0.9830,
        0.9830,
        0.9830,
        0.9840,
        0.9840,
        0.9840,
        0.9840,
        0.9840,
        0.9840,
        0.9840,
        0.9850,
        0.9850,
        0.9850,
        0.9850,
        0.9850,
        0.9850,
        0.9850,
        0.9850,
        0.9860,
        0.9860,
        0.9860,
        0.9860,
        0.9860,
        0.9870,
        0.9870,
        0.9870,
        0.9870,
        0.9870,
        0.9880,
        0.9880,
        0.9880,
        0.9880,
        0.9880,
        0.9880,
        0.9880,
        0.9880,
        0.9880,
        0.9880,
        0.9880,
        0.9880,
        0.9890,
        0.9890,
        0.9890,
        0.9890,
        0.9890,
        0.9890,
        0.9890,
        0.9890,
        0.9890,
        0.9890,
        0.9900,
        0.9900,
        0.9900,
        0.9900,
        0.9900,
        0.9900,
        0.9900,
        0.9900,
        0.9900,
        0.9900,
        0.9900,
        0.9900,
        0.9900,
        0.9900,
        0.9900,
        0.9900,
        0.9900,
        0.9900,
        0.9900,
        0.9900,
        0.9910,
        0.9910,
        0.9910,
        0.9910,
        0.9910,
        0.9910,
        0.9910,
        0.9910,
        0.9910,
        0.9910,
        0.9910,
        0.9910,
        0.9910,
        0.9910,
        0.9910,
        0.9910,
        0.9910,
        0.9910,
        0.9910,
        0.9910,
        0.9920,
        0.9920,
        0.9920,
        0.9920,
        0.9920,
        0.9920,
        0.9920,
        0.9920,
        0.9920,
        0.9920,
        0.9930,
        0.9930,
        0.9930,
        0.9930,
        0.9930,
        0.9930,
        0.9930,
        0.9930,
        0.9930,
        0.9930,
        0.9930,
        0.9930,
        0.9930,
        0.9930,
        0.9930,
        0.9930,
        0.9930,
        0.9930,
        0.9930,
        0.9930,
        0.9930,
        0.9930,
        0.9930,
        0.9930,
        0.9930,
        0.9930,
        0.9930,
        0.9930,
        0.9930,
        0.9930,
        0.9930,
        0.9930,
        0.9930,
        0.9930,
        0.9930,
        0.9930,
        0.9930,
        0.9930,
        0.9930,
        0.9930,
        0.9930,
        0.9930,
        0.9930,
        0.9930,
        0.9930,
        0.9930,
        0.9930,
        0.9930,
        0.9930,
        0.9930,
        0.9930,
        0.9930,
        0.9930,
        0.9930,
        0.9930,
        0.9930,
        0.9930,
        0.9930,
        0.9930,
        0.9930,
        0.9930,
        0.9930,
        0.9930,
        0.9930,
        0.9930,
        0.9930,
        0.9930,
        0.9930,
        0.9930,
        0.9930,
        0.9930,
        0.9930,
        0.9930,
        0.9930,
        0.9930,
        0.9930,
        0.9930,
        0.9930,
        0.9940,
        0.9940,
        0.9940,
        0.9940,
        0.9940,
        0.9940,
        0.9940,
        0.9940,
        0.9940,
        0.9940,
        0.9940,
        0.9940,
        0.9940,
        0.9940,
        0.9940,
        0.9940,
        0.9940,
        0.9940,
        0.9940,
        0.9940,
        0.9940,
        0.9940,
        0.9940,
        0.9940,
        0.9940,
        0.9940,
        0.9940,
        0.9940,
        0.9940,
        0.9940,
        0.9940,
        0.9940,
        0.9940,
        0.9940,
        0.9940,
        0.9940,
        0.9940,
        0.9940,
        0.9940,
        0.9940,
        0.9940,
        0.9940,
        0.9940,
        0.9940,
        0.9940,
        0.9940,
        0.9940,
        0.9940,
        0.9940,
        0.9940,
        0.9940,
        0.9940,
        0.9940,
        0.9940,
        0.9940,
        0.9940,
        0.9940,
        0.9940,
        0.9940,
        0.9940,
        0.9940,
        0.9940,
        0.9940,
        0.9940,
        0.9940,
        0.9940,
        0.9940,
        0.9940,
        0.9940,
        0.9940,
        0.9940,
        0.9940,
        0.9940,
        0.9940,
        0.9940,
        0.9940,
        0.9940,
        0.9940,
        0.9940,
        0.9940,
        0.9940,
        0.9940,
        0.9940,
        0.9940,
        0.9940,
        0.9940,
        0.9940,
        0.9940,
        0.9940,
        0.9940,
        0.9940,
        0.9940,
        0.9940,
        0.9940,
        0.9940,
        0.9940,
        0.9940,
        0.9940,
        0.9940,
        0.9940,
        0.9940,
        0.9940,
        0.9940,
        0.9940,
        0.9940,
        0.9940,
        0.9940,
        0.9940,
        0.9940,
        0.9940,
        0.9940,
        0.9940,
        0.9940,
        0.9940,
        0.9940,
        0.9940,
        0.9940,
        0.9940,
        0.9940,
        0.9940,
        0.9940,
        0.9940,
        0.9940,
        0.9940,
        0.9940,
        0.9940,
        0.9940,
        0.9940,
        0.9940,
        0.9940,
        0.9940,
        0.9940,
        0.9940,
        0.9940,
        0.9940,
        0.9940,
        0.9940,
        0.9940,
        0.9940,
        0.9940,
        0.9940,
        0.9940,
        0.9940,
        0.9940,
        0.9940,
        0.9940,
        0.9940,
        0.9940,
        0.9940,
        0.9940,
        0.9940,
        0.9940,
        0.9940,
        0.9940,
        0.9940,
        0.9940,
        0.9940,
        0.9940,
        0.9940,
        0.9940,
        0.9940,
        0.9940,
        0.9940,
        0.9940,
        0.9940,
        0.9940,
        0.9940,
        0.9940,
        0.9940,
        0.9940,
        0.9940,
        0.9940,
        0.9940,
        0.9940,
        0.9940,
        0.9940,
        0.9940,
        0.9940,
        0.9940,
        0.9940,
        0.9940,
        0.9940,
        0.9940,
        0.9940,
        0.9940,
        0.9940,
        0.9940,
        0.9940,
        0.9940,
        0.9940,
        0.9940,
        0.9940,
        0.9940,
        0.9940,
        0.9940,
        0.9940,
        0.9940,
        0.9940,
        0.9940,
        0.9940,
        0.9940,
        0.9940,
        0.9940,
        0.9940,
        0.9940,
        0.9940,
        0.9940,
        0.9940,
        0.9940,
        0.9940,
        0.9940,
        0.9940,
        0.9940,
        0.9940,
        0.9940,
        0.9940,
        0.9940,
        0.9940,
        0.9940,
        0.9940,
        0.9940,
        0.9940,
        0.9940,
        0.9940,
        0.9940,
        0.9940,
        0.9940,
        0.9940,
        0.9940,
        0.9940,
        0.9940,
        0.9940,
        0.9940,
        0.9940,
        0.9940,
        0.9940,
        0.9940,
        0.9940,
        0.9940,
        0.9940,
        0.9940,
        0.9940,
        0.9940,
        0.9940,
        0.9940,
        0.9940,
        0.9940,
        0.9940,
        0.9940,
        0.9940,
        0.9940,
        0.9940,
        0.9940,
        0.9940,
        0.9940,
        0.9940,
        0.9940,
        0.9940,
        0.9940,
        0.9940,
        0.9940,
        0.9940,
        0.9940,
        0.9940,
        0.9940,
        0.9940,
        0.9940,
        0.9940,
        0.9940,
        0.9940,
        0.9940,
        0.9940,
        0.9940,
        0.9940,
        0.9940,
        0.9940,
        0.9940,
        0.9940,
        0.9940,
        0.9940,
        0.9940,
        0.9940,
        0.9940,
        0.9940,
        0.9940,
        0.9940,
        0.9940,
        0.9940,
        0.9940,
        0.9940,
        0.9940,
        0.9940,
        0.9940,
        0.9940,
        0.9940,
        0.9940,
        0.9940,
        0.9940,
        0.9940,
        0.9940,
        0.9940,
        0.9940,
        0.9940,
        0.9940,
        0.9940,
        0.9940,
        0.9940,
        0.9940,
        0.9940,
        0.9940,
        0.9940,
        0.9940,
        0.9940,
        0.9940,
        0.9940,
        0.9940,
        0.9940,
        0.9940,
        0.9940,
        0.9940,
        0.9940,
        0.9940,
        0.9940,
        0.9940,
        0.9940,
        0.9940,
        0.9940,
        0.9940,
        0.9940,
        0.9940,
        0.9940,
        0.9940,
        0.9940,
        0.9940,
        0.9940,
        0.9940,
        0.9940,
        0.9940,
        0.9940,
        0.9940,
        0.9940,
        0.9940,
        0.9940,
        0.9940,
        0.9940,
        0.9940,
        0.9940,
        0.9940,
        0.9940,
        0.9940,
        0.9940,
        0.9940,
        0.9940,
        0.9940,
        0.9940,
        0.9940,
        0.9940,
        0.9940,
        0.9940,
        0.9940,
        0.9940,
        0.9940,
        0.9940,
        0.9940,
        0.9940,
        0.9940,
        0.9940,
        0.9940,
        0.9940,
        0.9940,
        0.9940,
        0.9940,
        0.9940,
        0.9940,
        0.9940,
        0.9940,
        0.9940,
        0.9940,
        0.9940,
        0.9940,
        0.9940,
        0.9940,
        0.9940,
        0.9940,
        0.9940,
        0.9940,
        0.9940,
        0.9940,
        0.9940,
        0.9940,
        0.9940,
        0.9940,
        0.9940,
        0.9940,
        0.9940,
        0.9940,
        0.9940,
        0.9940,
        0.9940,
        0.9940,
        0.9940,
        0.9940,
        0.9940,
        0.9940,
        0.9940,
        0.9940,
        0.9940,
        0.9940,
        0.9940,
        0.9940,
        0.9940,
        0.9940,
        0.9940,
        0.9940,
        0.9940,
        0.9940,
        0.9940,
        0.9940,
        0.9940,
        0.9940,
        0.9940,
        0.9940,
        0.9940,
        0.9940,
        0.9940,
        0.9940,
        0.9940,
        0.9940,
        0.9940,
        0.9940,
        0.9940,
        0.9940,
        0.9940,
        0.9940,
        0.9940,
        0.9940,
        0.9940,
        0.9940,
        0.9940,
        0.9940,
        0.9940,
        0.9940,
        0.9940,
        0.9940,
        0.9940,
        0.9940,
        0.9940,
        0.9940,
        0.9940,
        0.9940,
        0.9940,
        0.9940,
        0.9940,
        0.9940,
        0.9940,
        0.9940,
        0.9940,
        0.9940,
        0.9940,
        0.9940,
        0.9940,
        0.9940,
        0.9940,
        0.9940,
        0.9940,
        0.9940,
        0.9940,
        0.9940,
        0.9940,
        0.9940,
        0.9940,
        0.9940,
        0.9940,
        0.9940,
        0.9940,
        0.9940,
        0.9940,
        0.9940,
        0.9940,
        0.9940,
        0.9940,
        0.9940,
        0.9940,
        0.9940,
        0.9940,
        0.9940,
        0.9940,
        0.9940,
        0.9940,
        0.9940,
        0.9940,
        0.9940,
        0.9940,
        0.9940,
        0.9940,
        0.9940,
        0.9940,
        0.9940,
        0.9940,
        0.9940,
        0.9940,
        0.9940,
        0.9940,
        0.9940,
        0.9940,
        0.9940,
        0.9940,
        0.9940,
        0.9940,
        0.9940,
        0.9940,
        0.9940,
        0.9940,
        0.9940,
        0.9940,
        0.9940,
        0.9940,
        0.9940,
        0.9940,
        0.9940,
        0.9940,
        0.9940,
        0.9940,
        0.9940,
        0.9940,
        0.9940,
        0.9940,
        0.9940,
        0.9940,
        0.9940,
        0.9940,
        0.9940,
        0.9940,
        0.9940,
        0.9940,
        0.9940,
        0.9940,
        0.9940,
        0.9940,
        0.9940,
        0.9940,
        0.9940,
        0.9940,
        0.9940,
        0.9940,
        0.9940,
        0.9940,
        0.9940,
        0.9940,
        0.9940,
        0.9940,
        0.9940,
        0.9940,
        0.9940,
        0.9940,
        0.9940,
        0.9940,
        0.9940,
        0.9940,
        0.9940,
        0.9940,
        0.9940,
        0.9940,
        0.9940,
        0.9940,
        0.9940,
        0.9940,
        0.9940,
        0.9940,
        0.9940,
        0.9940,
        0.9940,
        0.9940,
        0.9940,
        0.9940,
        0.9940,
        0.9940,
        0.9940,
        0.9940,
        0.9940,
        0.9940,
        0.9940,
        0.9940,
        0.9940,
        0.9940,
        0.9940,
        0.9940,
        0.9940,
        0.9940,
        0.9940,
        0.9940,
        0.9940,
        0.9940,
        0.9940,
        0.9940,
        0.9940,
        0.9940,
        0.9940,
        0.9940,
        0.9940,
        0.9940,
        0.9940,
        0.9940,
        0.9940,
        0.9940,
        0.9940,
        0.9940,
        0.9940,
        0.9940,
        0.9940,
        0.9940,
        0.9940,
        0.9940,
        0.9940,
        0.9940,
        0.9940,
        0.9940,
        0.9940,
        0.9940,
        0.9940,
        0.9940,
        0.9940,
        0.9940,
        0.9940,
        0.9940,
        0.9940,
        0.9940,
        0.9940,
        0.9940,
        0.9940,
        0.9940,
        0.9940,
        0.9940,
        0.9940,
        0.9940,
        0.9940,
        0.9940,
        0.9940,
        0.9940,
        0.9940,
        0.9940,
        0.9940,
        0.9940,
        0.9940,
        0.9940,
        0.9940,
        0.9940,
        0.9940,
        0.9940,
        0.9940,
        0.9940,
        0.9940,
        0.9940,
        0.9940,
        0.9940,
        0.9940,
        0.9940,
        0.9940,
        0.9940,
        0.9940,
        0.9940,
        0.9940,
        0.9940,
        0.9940,
        0.9940,
        0.9940,
        0.9940,
        0.9940,
        0.9940,
        0.9940,
        0.9940,
        0.9940,
        0.9940,
        0.9940,
        0.9940,
        0.9940,
        0.9940,
        0.9940,
        0.9940,
        0.9940,
        0.9940,
        0.9940,
        0.9940,
        0.9940,
        0.9940,
        0.9940,
        0.9940,
        0.9940,
        0.9940,
        0.9940,
        0.9940,
        0.9940,
        0.9940,
        0.9940,
        0.9940,
        0.9940,
        0.9940,
        0.9940,
        0.9940,
        0.9940,
        0.9940,
        0.9940,
        0.9940,
        0.9930,
        0.9930,
        0.9930,
        0.9930,
        0.9930,
        0.9930,
        0.9930,
        0.9930,
        0.9930,
        0.9930,
        0.9930,
        0.9930,
        0.9930,
        0.9930,
        0.9930,
        0.9930,
        0.9930,
        0.9930,
        0.9930,
        0.9930,
        0.9930,
        0.9930,
        0.9930,
        0.9930,
        0.9930,
        0.9930,
        0.9930,
        0.9930,
        0.9930,
        0.9930,
        0.9930,
        0.9930,
        0.9930,
        0.9930,
        0.9930,
        0.9930,
        0.9930,
        0.9930,
        0.9930,
        0.9930,
        0.9930,
        0.9930,
        0.9930,
        0.9930,
        0.9930,
        0.9930,
        0.9930,
        0.9930,
        0.9930,
        0.9930,
        0.9930,
        0.9930,
        0.9930,
        0.9930,
        0.9930,
        0.9930,
        0.9930,
        0.9930,
        0.9930,
        0.9930,
        0.9930,
        0.9930,
        0.9930,
        0.9930,
        0.9930,
        0.9930,
        0.9930,
        0.9930,
        0.9930,
        0.9930,
        0.9930,
        0.9930,
        0.9930,
        0.9930,
        0.9930,
        0.9930,
        0.9930,
        0.9930,
        0.9930,
        0.9930,
        0.9930,
        0.9930,
        0.9930,
        0.9930,
        0.9930,
        0.9930,
        0.9930,
        0.9930,
        0.9930,
        0.9930,
        0.9930,
        0.9930,
        0.9930,
        0.9930,
        0.9930,
        0.9930,
        0.9930,
        0.9930,
        0.9930,
        0.9930,
        0.9920,
        0.9920,
        0.9920,
        0.9920,
        0.9920,
        0.9920,
        0.9920,
        0.9920,
        0.9920,
        0.9920,
        0.9920,
        0.9920,
        0.9920,
        0.9920,
        0.9920,
        0.9920,
        0.9920,
        0.9920,
        0.9920,
        0.9920,
        0.9920,
        0.9920,
        0.9920,
        0.9920,
        0.9920,
        0.9920,
        0.9920,
        0.9920,
        0.9920,
        0.9920,
        0.9920,
        0.9920,
        0.9920,
        0.9920,
        0.9920,
        0.9920,
        0.9920,
        0.9920,
        0.9920,
        0.9920,
        0.9920,
        0.9920,
        0.9920,
        0.9920,
        0.9920,
        0.9920,
        0.9920,
        0.9920,
        0.9920,
        0.9920,
        0.9910,
        0.9910,
        0.9910,
        0.9910,
        0.9910,
        0.9910,
        0.9910,
        0.9910,
        0.9910,
        0.9910,
        0.9910,
        0.9910,
        0.9910,
        0.9910,
        0.9910,
        0.9910,
        0.9910,
        0.9910,
        0.9910,
        0.9910,
        0.9910,
        0.9910,
        0.9910,
        0.9910,
        0.9910,
        0.9910,
        0.9910,
        0.9910,
        0.9910,
        0.9910,
        0.9910,
        0.9910,
        0.9910,
        0.9910,
        0.9910,
        0.9910,
        0.9910,
        0.9910,
        0.9910,
        0.9910,
        0.9910,
        0.9910,
        0.9910,
        0.9910,
        0.9910,
        0.9910,
        0.9910,
        0.9910,
        0.9910,
        0.9910,
        0.9910,
        0.9910,
        0.9910,
        0.9910,
        0.9910,
        0.9910,
        0.9910,
        0.9910,
        0.9910,
        0.9910,
        0.9910,
        0.9910,
        0.9910,
        0.9910,
        0.9910,
        0.9910,
        0.9910,
        0.9910,
        0.9910,
        0.9910,
        0.9910,
        0.9910,
        0.9910,
        0.9910,
        0.9910,
        0.9910,
        0.9910,
        0.9910,
        0.9910,
        0.9910,
        0.9910,
        0.9910,
        0.9910,
        0.9910,
        0.9910,
        0.9910,
        0.9910,
        0.9910,
        0.9910,
        0.9910,
        0.9910,
        0.9910,
        0.9910,
        0.9910,
        0.9910,
        0.9910,
        0.9910,
        0.9910,
        0.9910,
        0.9920,
        0.9920,
        0.9920,
        0.9920,
        0.9920,
        0.9920,
        0.9920,
        0.9920,
        0.9920,
        0.9920,
        0.9920,
        0.9920,
        0.9920,
        0.9920,
        0.9920,
        0.9920,
        0.9920,
        0.9920,
        0.9920,
        0.9920,
        0.9920,
        0.9920,
        0.9920,
        0.9920,
        0.9920,
        0.9920,
        0.9920,
        0.9920,
        0.9920,
        0.9920,
        0.9920,
        0.9920,
        0.9920,
        0.9920,
        0.9920,
        0.9920,
        0.9920,
        0.9920,
        0.9920,
        0.9920,
        0.9920,
        0.9920,
        0.9920,
        0.9920,
        0.9920,
        0.9920,
        0.9920,
        0.9920,
        0.9920,
        0.9920,
        0.9920,
        0.9920,
        0.9920,
        0.9920,
        0.9920,
        0.9920,
        0.9920,
        0.9920,
        0.9920,
        0.9920,
        0.9920,
        0.9920,
        0.9920,
        0.9920,
        0.9920,
        0.9920,
        0.9920,
        0.9920,
        0.9920,
        0.9920,
        0.9920,
        0.9920,
        0.9920,
        0.9920,
        0.9920,
        0.9920,
        0.9920,
        0.9920,
        0.9920,
        0.9920,
        0.9920,
        0.9920,
        0.9920,
        0.9920,
        0.9920,
        0.9920,
        0.9920,
        0.9920,
        0.9920,
        0.9920,
        0.9920,
        0.9920,
        0.9920,
        0.9920,
        0.9920,
        0.9920,
        0.9920,
        0.9920,
        0.9920,
        0.9920,
        0.9920,
        0.9920,
        0.9920,
        0.9920,
        0.9920,
        0.9920,
        0.9920,
        0.9920,
        0.9920,
        0.9920,
        0.9920,
        0.9920,
        0.9920,
        0.9920,
        0.9920,
        0.9920,
        0.9920,
        0.9920,
        0.9920,
        0.9920,
        0.9920,
        0.9920,
        0.9920,
        0.9920,
        0.9920,
        0.9920,
        0.9920,
        0.9920,
        0.9920,
        0.9920,
        0.9920,
        0.9920,
        0.9920,
        0.9920,
        0.9920,
        0.9920,
        0.9920,
        0.9920,
        0.9920,
        0.9920,
        0.9920,
        0.9920,
        0.9920,
        0.9920,
        0.9920,
        0.9920,
        0.9920,
        0.9920,
        0.9920,
        0.9920,
        0.9920,
        0.9920,
        0.9920,
        0.9920,
        0.9920,
        0.9920,
        0.9920,
        0.9920,
        0.9920,
        0.9920,
        0.9920,
        0.9920,
        0.9920,
        0.9920,
        0.9920,
        0.9920,
        0.9920,
        0.9920,
        0.9920,
        0.9920,
        0.9920,
        0.9920,
        0.9920,
        0.9920,
        0.9920,
        0.9920,
        0.9920,
        0.9920,
        0.9920,
        0.9920,
        0.9920,
        0.9920,
        0.9920,
        0.9920,
        0.9920,
        0.9920,
        0.9920,
        0.9920,
        0.9920,
        0.9920,
        0.9920,
        0.9920,
        0.9920,
        0.9920,
        0.9920,
        0.9920,
        0.9920,
        0.9920,
        0.9920,
        0.9920,
        0.9920,
        0.9910,
        0.9910,
        0.9910,
        0.9910,
        0.9910,
        0.9910,
        0.9910,
        0.9910,
        0.9910,
        0.9910,
        0.9910,
        0.9910,
        0.9910,
        0.9910,
        0.9910,
        0.9910,
        0.9910,
        0.9910,
        0.9910,
        0.9910,
        0.9910,
        0.9910,
        0.9910,
        0.9910,
        0.9910,
        0.9910,
        0.9910,
        0.9910,
        0.9910,
        0.9910,
        0.9910,
        0.9910,
        0.9910,
        0.9910,
        0.9910,
        0.9910,
        0.9910,
        0.9910,
        0.9910,
        0.9910,
        0.9910,
        0.9910,
        0.9910,
        0.9910,
        0.9910,
        0.9910,
        0.9910,
        0.9910,
        0.9910,
        0.9910,
        0.9900,
        0.9900,
        0.9900,
        0.9900,
        0.9900,
        0.9900,
        0.9900,
        0.9900,
        0.9900,
        0.9900,
        0.9900,
        0.9900,
        0.9900,
        0.9900,
        0.9900,
        0.9900,
        0.9900,
        0.9900,
        0.9900,
        0.9900,
        0.9900,
        0.9900,
        0.9900,
        0.9900,
        0.9900,
        0.9900,
        0.9900,
        0.9900,
        0.9900,
        0.9900,
        0.9900,
        0.9900,
        0.9900,
        0.9900,
        0.9900,
        0.9900,
        0.9900,
        0.9900,
        0.9900,
        0.9900,
        0.9900,
        0.9900,
        0.9900,
        0.9900,
        0.9900,
        0.9900,
        0.9900,
        0.9900,
        0.9900,
        0.9900,
        0.9900,
        0.9900,
        0.9900,
        0.9900,
        0.9900,
        0.9900,
        0.9900,
        0.9900,
        0.9900,
        0.9900,
        0.9900,
        0.9900,
        0.9900,
        0.9900,
        0.9900,
        0.9900,
        0.9900,
        0.9900,
        0.9900,
        0.9900,
        0.9900,
        0.9900,
        0.9900,
        0.9900,
        0.9900,
        0.9900,
        0.9900,
        0.9900,
        0.9900,
        0.9900,
        0.9900,
        0.9900,
        0.9900,
        0.9900,
        0.9900,
        0.9900,
        0.9900,
        0.9900,
        0.9900,
        0.9900,
        0.9900,
        0.9900,
        0.9900,
        0.9900,
        0.9900,
        0.9900,
        0.9900,
        0.9900,
        0.9900,
        0.9900,
        0.9900,
        0.9900,
        0.9900,
        0.9900,
        0.9900,
        0.9900,
        0.9900,
        0.9900,
        0.9900,
        0.9900,
        0.9900,
        0.9900,
        0.9900,
        0.9900,
        0.9900,
        0.9900,
        0.9900,
        0.9900,
        0.9900,
        0.9900,
        0.9900,
        0.9900,
        0.9900,
        0.9900,
        0.9900,
        0.9900,
        0.9900,
        0.9900,
        0.9900,
        0.9900,
        0.9900,
        0.9890,
        0.9890,
        0.9890,
        0.9890,
        0.9890,
        0.9890,
        0.9890,
        0.9890,
        0.9890,
        0.9890,
        0.9890,
        0.9890,
        0.9880,
        0.9880,
        0.9880,
        0.9880,
        0.9880,
        0.9880,
        0.9880,
        0.9880,
        0.9880,
        0.9880,
        0.9880,
        0.9880,
        0.9880,
        0.9870,
        0.9870,
        0.9870,
        0.9870,
        0.9870,
        0.9870,
        0.9870,
        0.9870,
        0.9870,
        0.9870,
        0.9870,
        0.9870,
        0.9860,
        0.9860,
        0.9860,
        0.9860,
        0.9860,
        0.9860,
        0.9860,
        0.9860,
        0.9860,
        0.9860,
        0.9860,
        0.9860,
        0.9860,
        0.9860,
        0.9860,
        0.9860,
        0.9860,
        0.9860,
        0.9860,
        0.9860,
        0.9860,
        0.9860,
        0.9860,
        0.9860,
        0.9860,
        0.9860,
        0.9860,
        0.9860,
        0.9860,
        0.9860,
        0.9860,
        0.9860,
        0.9850,
        0.9850,
        0.9850,
        0.9850,
        0.9850,
        0.9850,
        0.9850,
        0.9850,
        0.9850,
        0.9850,
        0.9850,
        0.9850,
        0.9850,
        0.9850,
        0.9850,
        0.9850,
        0.9850,
        0.9850,
        0.9850,
        0.9850,
        0.9850,
        0.9850,
        0.9850,
        0.9850,
        0.9850,
        0.9850,
        0.9850,
        0.9850,
        0.9850,
        0.9850,
        0.9850,
        0.9850,
        0.9850,
        0.9850,
        0.9850,
        0.9850,
        0.9850,
        0.9850,
        0.9850,
        0.9850,
        0.9850,
        0.9850,
        0.9850,
        0.9850,
        0.9850,
        0.9850,
        0.9850,
        0.9850,
        0.9850,
        0.9850,
        0.9840,
        0.9840,
        0.9840,
        0.9840,
        0.9840,
        0.9840,
        0.9840,
        0.9840,
        0.9840,
        0.9840,
        0.9840,
        0.9840,
        0.9840,
        0.9840,
        0.9840,
        0.9840,
        0.9840,
        0.9840,
        0.9840,
        0.9840,
        0.9840,
        0.9840,
        0.9840,
        0.9840,
        0.9840,
        0.9840,
        0.9840,
        0.9840,
        0.9840,
        0.9840,
        0.9840,
        0.9840,
        0.9840,
        0.9830,
        0.9830,
        0.9830,
        0.9830,
        0.9830,
        0.9830,
        0.9830,
        0.9830,
        0.9830,
        0.9830,
        0.9830,
        0.9830,
        0.9830,
        0.9830,
        0.9830,
        0.9830,
        0.9830,
        0.9820,
        0.9820,
        0.9820,
        0.9820,
        0.9820,
        0.9820,
        0.9820,
        0.9820,
        0.9820,
        0.9820,
        0.9820,
        0.9820,
        0.9820,
        0.9820,
        0.9820,
        0.9820,
        0.9810,
        0.9810,
        0.9810,
        0.9810,
        0.9810,
        0.9810,
        0.9810,
        0.9810,
        0.9810,
        0.9810,
        0.9810,
        0.9800,
        0.9800,
        0.9800,
        0.9800,
        0.9800,
        0.9790,
        0.9790,
        0.9790,
        0.9790,
        0.9790,
        0.9790,
        0.9790,
        0.9790,
        0.9780,
        0.9780,
        0.9780,
        0.9780,
        0.9780,
        0.9780,
        0.9780,
        0.9770,
        0.9770,
        0.9770,
        0.9770,
        0.9770,
        0.9760,
        0.9760,
        0.9760,
        0.9760,
        0.9760,
        0.9760,
        0.9760,
        0.9760,
        0.9750,
        0.9750,
        0.9750,
        0.9750,
        0.9750,
        0.9750,
        0.9750,
        0.9740,
        0.9740,
        0.9740,
        0.9740,
        0.9740,
        0.9730,
        0.9730,
        0.9730,
        0.9730,
        0.9730,
        0.9730,
        0.9730,
        0.9730,
        0.9720,
        0.9720,
        0.9720,
        0.9720,
        0.9720,
        0.9720,
        0.9720,
        0.9720,
        0.9720,
        0.9720,
        0.9710,
        0.9710,
        0.9710,
        0.9710,
        0.9710,
        0.9710,
        0.9710,
        0.9710,
        0.9710,
        0.9710,
        0.9700,
        0.9700,
        0.9700,
        0.9700,
        0.9700,
        0.9700,
        0.9700,
        0.9700,
        0.9700,
        0.9700,
        0.9690,
        0.9690,
        0.9690,
        0.9690,
        0.9690,
        0.9690,
        0.9690,
        0.9690,
        0.9690,
        0.9690,
        0.9680,
        0.9680,
        0.9680,
        0.9680,
        0.9680,
        0.9680,
        0.9680,
        0.9680,
        0.9680,
        0.9680,
        0.9670,
        0.9670,
        0.9670,
        0.9670,
        0.9670,
        0.9670,
        0.9670,
        0.9670,
        0.9670,
        0.9670,
        0.9660,
        0.9660,
        0.9660,
        0.9660,
        0.9660,
        0.9660,
        0.9660,
        0.9650,
        0.9650,
        0.9650,
        0.9650,
        0.9650,
        0.9640,
        0.9640,
        0.9640,
        0.9640,
        0.9640,
        0.9640,
        0.9640,
        0.9640,
        0.9640,
        0.9640,
        0.9640,
        0.9640,
        0.9640,
        0.9640,
        0.9640,
        0.9640,
        0.9640,
        0.9650,
        0.9650,
        0.9650,
        0.9650,
        0.9650,
        0.9650,
        0.9650,
        0.9650,
        0.9660,
        0.9660,
        0.9660,
        0.9660,
        0.9660,
        0.9670,
        0.9670,
        0.9670,
        0.9670,
        0.9680,
        0.9680,
        0.9680,
        0.9690,
        0.9690,
        0.9690,
        0.9690,
        0.9700,
        0.9700,
        0.9700,
        0.9710,
        0.9710,
        0.9710,
        0.9720,
        0.9720,
        0.9720,
        0.9720,
        0.9730,
        0.9730,
        0.9730,
        0.9730,
        0.9740,
        0.9740,
        0.9740,
        0.9740,
        0.9740,
        0.9750,
        0.9750,
        0.9750,
        0.9750,
        0.9750,
        0.9760,
        0.9760,
        0.9760,
        0.9760,
        0.9760,
        0.9770,
        0.9770,
        0.9770,
        0.9770,
        0.9770,
        0.9770,
        0.9770,
        0.9770,
        0.9770,
        0.9770,
        0.9770,
        0.9770,
        0.9770,
        0.9770,
        0.9770,
        0.9770,
        0.9770,
        0.9780,
        0.9780,
        0.9780,
        0.9780,
        0.9780,
        0.9780,
        0.9780,
        0.9780,
        0.9780,
        0.9780,
        0.9780,
        0.9780,
        0.9780,
        0.9780,
        0.9780,
        0.9780,
        0.9780,
        0.9780,
        0.9780,
        0.9780,
        0.9780,
        0.9770,
        0.9770,
        0.9770,
        0.9770,
        0.9770,
        0.9770,
        0.9770,
        0.9770,
        0.9770,
        0.9770,
        0.9770,
        0.9770,
        0.9770,
        0.9770,
        0.9770,
        0.9770,
        0.9770,
        0.9770,
        0.9770,
        0.9770,
        0.9760,
        0.9760,
        0.9760,
        0.9760,
        0.9760,
        0.9760,
        0.9760,
        0.9760,
        0.9760,
        0.9760,
        0.9760,
        0.9760,
        0.9760,
        0.9760,
        0.9760,
        0.9760,
        0.9760,
        0.9760,
        0.9760,
        0.9760,
        0.9750,
        0.9750,
        0.9750,
        0.9750,
        0.9750,
        0.9750,
        0.9750,
        0.9750,
        0.9750,
        0.9750,
        0.9740,
        0.9740,
        0.9740,
        0.9740,
        0.9740,
        0.9740,
        0.9740,
        0.9730,
        0.9730,
        0.9730,
        0.9730,
        0.9730,
        0.9720,
        0.9720,
        0.9720,
        0.9720,
        0.9720,
        0.9720,
        0.9720,
        0.9720,
        0.9710,
        0.9710,
        0.9710,
        0.9710,
        0.9710,
        0.9710,
        0.9710,
        0.9710,
        0.9710,
        0.9710,
        0.9700,
        0.9700,
        0.9700,
        0.9700,
        0.9700,
        0.9700,
        0.9700,
        0.9690,
        0.9690,
        0.9690,
        0.9690,
        0.9690,
        0.9680,
        0.9680,
        0.9680,
        0.9680,
        0.9680,
        0.9670,
        0.9670,
        0.9670,
        0.9670,
        0.9670,
        0.9660,
        0.9660,
        0.9660,
        0.9660,
        0.9660,
        0.9660,
        0.9660,
        0.9660,
        0.9650,
        0.9650,
        0.9650,
        0.9650,
        0.9650,
        0.9650,
        0.9650,
        0.9650,
        0.9650,
        0.9650,
        0.9640,
        0.9640,
        0.9640,
        0.9640,
        0.9640,
        0.9640,
        0.9640,
        0.9640,
        0.9640,
        0.9640,
        0.9630,
        0.9630,
        0.9630,
        0.9630,
        0.9630,
        0.9630,
        0.9630,
        0.9630,
        0.9630,
        0.9630,
        0.9630,
        0.9630,
        0.9630,
        0.9630,
        0.9630,
        0.9630,
        0.9630,
        0.9630,
        0.9630,
        0.9630,
        0.9620,
        0.9620,
        0.9620,
        0.9620,
        0.9620,
        0.9620,
        0.9620,
        0.9620,
        0.9620,
        0.9620,
        0.9620,
        0.9620,
        0.9620,
        0.9620,
        0.9620,
        0.9620,
        0.9620,
        0.9620,
        0.9620,
        0.9620,
        0.9620,
        0.9620,
        0.9620,
        0.9620,
        0.9620,
        0.9620,
        0.9620,
        0.9620,
        0.9620,
        0.9620,
        0.9620,
        0.9620,
        0.9620,
        0.9620,
        0.9620,
        0.9620,
        0.9620,
        0.9620,
        0.9620,
        0.9620,
        0.9610,
        0.9610,
        0.9610,
        0.9610,
        0.9610,
        0.9610,
        0.9610,
        0.9610,
        0.9610,
        0.9610,
        0.9610,
        0.9610,
        0.9610,
        0.9610,
        0.9610,
        0.9610,
        0.9610,
        0.9610,
        0.9610,
        0.9610,
        0.9610,
        0.9610,
        0.9610,
        0.9610,
        0.9610,
        0.9610,
        0.9610,
        0.9610,
        0.9610,
        0.9610,
        0.9610,
        0.9610,
        0.9610,
        0.9610,
        0.9610,
        0.9610,
        0.9610,
        0.9610,
        0.9610,
        0.9610,
        0.9610,
        0.9610,
        0.9610,
        0.9610,
        0.9610,
        0.9610,
        0.9610,
        0.9610,
        0.9610,
        0.9610,
        0.9600,
        0.9600,
        0.9600,
        0.9600,
        0.9600,
        0.9600,
        0.9600,
        0.9600,
        0.9600,
        0.9600,
        0.9600,
        0.9600,
        0.9600,
        0.9600,
        0.9600,
        0.9600,
        0.9600,
        0.9600,
        0.9600,
        0.9600,
        0.9600,
        0.9600,
        0.9600,
        0.9600,
        0.9600,
    ]

    corr = [((Ms[i] * 0.01 - Mh[i] * 0.01) / (1 - Mh[i] * 0.01)) * Rr[i] for i in range(2250)]
    print("Calculated corrected data")

    txt = open(path + model + ".txt", "w")
    string = serial_number + "\nThis data is for reference only\n"
    stringdata = [f"{str(i + 250)}\t{str(corr[i])}\n" for i in range(2250)]
    stringdata.insert(0, f"{serial_number}\nThis data is for reference only\n")
    txt.write("".join(stringdata))
    print(f"Generated {model}.txt file")

    ReplaceText(doc, "sn", serial_number)
    ReplaceText(doc, "DATE", f"{date[0]}/{date[1]}/{date[2]}")
    ReplaceText(doc, "model", model)
    ReplaceText(doc, "isA", "X" if instrument in "aA" else "")
    ReplaceText(doc, "isB", "X" if instrument in "bB" else "")
    ReplaceText(doc, "isC", "X" if instrument in "cC" else "")
    uncertainty_table = doc.tables[2]._cells
    uncertainty = []
    offset = -1
    for i in range(9):
        if n_r == uncertainty_table[i].text:
            offset = i
            break
    if offset == -1:
        return "Invalid Nominal Reflectance"
    for i in range(9 + offset, len(uncertainty_table), 9):
        u = float(uncertainty_table[i].text)
        w = int(uncertainty_table[i - offset].text)
        j = 0
        while u < 1:
            u *= 10
            j += 1
        uncertainty.append((w, j))

    print("Found Uncertainty values in template")

    for i in range(25, 251, 5):
        u = 0
        for j in uncertainty:
            if j[0] == i * 10:
                u = j[1]
                break
        ref = round(corr[i * 10 - 250 - 1] * pow(10, u)) / pow(10, u)
        ReplaceText(doc, f"w{i}", str(ref))
    print("Replaced metadata in template docx (SN, Model, date, corrected data table)")

    plt.plot(range(250, 2500), corr, color="black")
    # plt.title("Graph I: 8°/Hemispherical Spectral Reflectance")
    plt.ylabel("Reflectance Factor")
    plt.xlabel("Wavelength (nm)")
    plt.xticks([i for i in range(250, 2501, 250)])
    plt.axis([250, 2500, 0, 0.25])
    print("Created corrected data plot")
    plt.savefig("temp.png")
    print("Saved plot as temp.png")
    ReplacePicture(doc, "graph", "temp.png", (7, 5.5))
    print("Replaced graph with temp.png in template docx")
    os.remove("temp.png")
    print("Removed temp.png")

    doc.save(path + "DM-01400-010Rev04 Gray cal cert non NVLAP.docx")
    print(f"Saved template docx at {path}DM-01400-010Rev04 Gray cal cert non NVLAP.docx")
    savePDF(f"{path}DM-01400-010Rev04 Gray cal cert non NVLAP.docx", path + serial_number + ".pdf")

    return True


def main() -> None:
    layout = [
        [sg.FolderBrowse(), sg.Text("Select Folder", size=(40, 1))],
        [sg.Text("")],
        [
            sg.Text("Model", size=(4, 1)),
            sg.Input("", size=(20, 1), key="Model"),
            sg.Text("Serial Number", size=(10, 1)),
            sg.Input("", size=(20, 1), key="Serial Number"),
        ],
        [sg.Text("")],
        [
            sg.Text("Instrument"),
            sg.DropDown(["A", "B", "C"], "A", size=(7, 1), key="Instrument"),
            sg.CalendarButton("Select Date", target=(4, 3), format="%m/%d/%Y"),
            sg.Text(key="Date", size=(20, 1)),
        ],
        [sg.Text("")],
        [
            sg.Text("Nominal Reflectance"),
            sg.DropDown(["2%", "5%", "10%", "20%", "40%", "60%", "80%", "99%"], "99%", size=(7, 1), key="Nominal Reflectance"),
            sg.Button("Execute"),
        ],
        [sg.Text(key="error_message", size=(40, 3))],
    ]
    window = sg.Window(title="Ref Cal Auto", layout=layout, margins=(0, 20))
    status = False
    while True:
        event, values = window.read()

        if event == "Execute":
            if not values["Browse"]:
                result = "No Folder Selected"
            elif not window["Date"].DisplayText:
                result = "No date selected"
            elif not values["Serial Number"]:
                result = "No Serial Number Input"
            elif not values["Model"]:
                result = "No Model Input"
            else:
                date = dateFromString(window["Date"].DisplayText)
                if not date:
                    result = "Invalid Date"
                else:
                    print(date)
                    result = Execute(
                        values["Browse"] + "/",
                        values["Model"],
                        values["Serial Number"],
                        date,
                        values["Nominal Reflectance"],
                        values["Instrument"],
                    )

            if result is True:
                status = True
                print("Success")
                break
            else:
                status = False
                window["error_message"].update(result)
        if event == sg.WIN_CLOSED:
            break
    window.close()
    if not status:
        print("Press enter to exit")
        input("")


main()
# print(Execute("C:\\Users\\wdelgiudice\\Downloads\\18%PF-1020-4436 - Copy\\", "CSRT-18-020", "PF-0921-4398", dateFromString("1/6/2021"), "99%", "B"))
